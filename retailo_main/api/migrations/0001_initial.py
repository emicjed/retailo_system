# Generated by Django 5.2.6 on 2025-09-04 11:07

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='UserIdentifier',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user_token', models.CharField(db_index=True, max_length=256, unique=True)),
                ('user_status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('BLOCKED', 'Blocked'), ('REMOVED', 'Removed')], default='INACTIVE', max_length=20)),
                ('blocked_by', models.CharField(blank=True, max_length=128, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('blocked_at', models.DateTimeField(blank=True, null=True)),
                ('removed_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserPrivileges',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Administration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('login', models.CharField(blank=True, db_index=True, max_length=100, null=True, unique=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email_address', models.EmailField(blank=True, db_index=True, max_length=256, null=True, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('last_login_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='administration_profile', to='api.useridentifier')),
            ],
        ),
        migrations.AddField(
            model_name='useridentifier',
            name='user_privilege',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='users', to='api.userprivileges'),
        ),
        migrations.CreateModel(
            name='EmailOTP',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('purpose', models.CharField(choices=[('LOGIN', 'Login 2FA'), ('RESET', 'Password reset')], default='LOGIN', max_length=16)),
                ('code_hash', models.CharField(max_length=128)),
                ('expires_at', models.DateTimeField()),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('used_at', models.DateTimeField(blank=True, null=True)),
                ('attempts', models.PositiveIntegerField(default=0)),
                ('max_attempts', models.PositiveIntegerField(default=5)),
                ('request_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_otps', to='api.useridentifier')),
            ],
            options={
                'indexes': [models.Index(fields=['user', 'purpose'], name='api_emailot_user_id_3d04f8_idx'), models.Index(fields=['expires_at'], name='api_emailot_expires_037b79_idx')],
            },
        ),
        migrations.CreateModel(
            name='Authorization',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('password_hash', models.CharField(max_length=256)),
                ('password_history', models.JSONField(blank=True, default=list)),
                ('user_attempts', models.IntegerField(default=0)),
                ('last_attempt', models.DateTimeField(blank=True, null=True)),
                ('locked_until', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='authorization', to='api.useridentifier')),
            ],
            options={
                'indexes': [models.Index(fields=['user'], name='api_authori_user_id_f26ebc_idx'), models.Index(fields=['locked_until'], name='api_authori_locked__9dc3e1_idx')],
            },
        ),
        migrations.CreateModel(
            name='Access',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('module', models.CharField(choices=[('administration', 'Panel administracyjny'), ('orders', 'Zamówienia'), ('products', 'Produkty'), ('customers', 'Klienci')], db_index=True, max_length=32)),
                ('level', models.IntegerField(choices=[(0, 'Brak dostępu'), (1, 'Tylko odczyt'), (2, 'Odczyt i modyfikacja'), (3, 'Pełny dostęp (łącznie z blokowaniem)')], default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accesses', to='api.useridentifier')),
            ],
            options={
                'unique_together': {('user', 'module')},
            },
        ),
        migrations.AddIndex(
            model_name='useridentifier',
            index=models.Index(fields=['user_token'], name='api_useride_user_to_d54e60_idx'),
        ),
        migrations.AddIndex(
            model_name='useridentifier',
            index=models.Index(fields=['user_status'], name='api_useride_user_st_5f9b7b_idx'),
        ),
    ]
